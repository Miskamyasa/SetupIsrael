---
import _ from "lodash";
import availableServices from "../../dto/services";
import type { AvailableServices } from "../../dto/types";
import CTA from "../CTA/CTA.astro";
import Dots from "../svg/Dots.astro";
import Polygon from "../svg/Polygon.astro";
import ServiceCard from "./ServiceCard.astro";

export interface Props {
  title: string
  description: string
  slugs: AvailableServices[]
}

const { title, description, slugs } = Astro.props;

const services = _.map(slugs.slice(0, 3), (slug) => {
  return availableServices[slug];
});
---

<section
  class="relative container flex flex-wrap"
  id="services">

  <!-- TEXT -->
  <div class="cta-block relative">
    <CTA
      description={description}
      title={title} />
    <div class="absolute z-[-1] top-[-2rem] left-[-3rem] rotate-180 fill-gust">
      <Polygon />
    </div>
  </div>
  <!-- END TEXT -->

  <Dots />

  <!-- CARDS -->
  <div class="relative bg-services cards-grid">
    {
      services.map((service) => (
        <div class="card">
          <ServiceCard {...service} />
        </div>
      ))
    }
  </div>
  <!-- END CARDS -->

</section>

<style>
  .cta-block {
    width: 100%;
  }

  .cards-grid {
    margin-top: 5rem;
    display: grid;
    width: 100%;
    place-content: center;
    gap: 2rem;
  }

  @media screen and (min-width: 1024px) {
    .cta-block {
      width: 32%;
      padding-right: 5rem;
      align-self: center;
    }

    .cards-grid {
      margin-top: 0;
      width: 68%;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(2, 1fr);
      place-items: center;
    }

    .card {
      max-width: 25rem;
    }

    .card:first-child {
      grid-column: 1 / 2;
      grid-row: 1 / 3;
      align-self: center;
    }
  }

  @media screen and (min-width: 1280px) {
    .cta-block {
      width: 40%;
    }

    .cards-grid {
      width: 60%;
    }
  }

  @media screen and (min-width: 1536px) {
    .cta-block {
      width: 45%;
    }

    .cards-grid {
      width: 55%;
    }
  }
</style>
